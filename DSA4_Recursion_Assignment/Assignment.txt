--------------------------------------------------------------------------------------------------------------
                                RECURSION
--------------------------------------------------------------------------------------------------------------
Assignment Questions
Q1 : Given an integer, find out the sum of its digits using recursion.
Input: n= 1234
Output: 10
Explanation: 1+2+3+4=10
ans:
                public static int digitSum(int digit){
                        int sum=0;
                        if(digit==0){
                            return 0;
                        }
                        return ((digit%10)+digitSum(digit/10));
                    }
                    public static void main(String[] args) {
                        System.out.print("Enter a Digit: ");
                        Scanner sc = new Scanner(System.in);
                        int digit = sc.nextInt();
                        System.out.println("Sum of Digits of number "+digit+" = "+digitSum(digit));
                    }

Q2: Given a number n. Find the sum of natural numbers till n but with alternate signs.
That means if n = 5 then you have to return 1-2+3-4+5 = 3 as your answer.
Constraints : 0<=n<=1e6
Input1 : n = 10
Output 1 : -5
Explanation : 1-2+3-4+5-6+7-8+9-10 = -5
Input 2 : n = 5
Output 2 : 3
ans:
                    public static int nSum(int n,int i){
                        if(i == n + 1)return 0;
                        if(i%2 == 0)return nSum(n , i + 1) - i;
                        else return nSum(n , i + 1) + i;
                    }
                    public static void main(String[] args) {
                        System.out.print("Enter a no: ");
                        Scanner sc = new Scanner(System.in);
                        int n  = sc.nextInt();
                        System.out.println(nSum(n,1));
                        sc.close();
                    }

Q3: Print the max value of the array [ 13, 1, -3, 22, 5].
ans:
                    public static int checkMax(int arr[],int n,int idx){
                        if(idx==n-1){
                            return n-1;
                        }
                        int maxVal = Math.max(arr[idx], checkMax(arr, n, idx+1));
                        return maxVal;
                    }
                    public static void main(String[] args) {
                        int arr[] = {13, 1, -3, 22, 5};
                        int n = arr.length;
                        System.out.println("max = "+checkMax(arr,n,0));
                    }

Q4 : Find the sum of the values of the array [92, 23, 15, -20, 10].
ans=120
                    public static int findSum(int arr[],int n,int idx){
                        if(idx==n-1){
                            return arr[idx];
                        }
                        return arr[idx]+findSum(arr, n, idx+1);
                    }
                    public static void main(String[] args) {
                        int arr[] = {92,23,15,-20,10};
                        int n = arr.length;
                        System.out.println("Sum of array elements = "+findSum(arr,n,0));
                    }

Q5. Given a number n. Print if it is an armstrong number or not. An armstrong number is a number if the sum
of every digit in that number raised to the power of total digits in that number is equal to the number.
Example : 153 = 1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153 hence 153 is an armstrong number. (Easy)
Input1 : 153
Output1 : Yes
Input 2 : 134
Output2 : No


